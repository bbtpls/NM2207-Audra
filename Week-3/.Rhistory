setwd("~/Desktop/school archive/NM2207/Week-3")
# Example a.: execute this example
x <- 'A'
x
# Load package tidyverse
library(tidyverse)
x
# Complete the code for Example b and execute it
x <- "Apple"
x
# Load package tidyverse
library(tidyverse)
x
# Complete the code for Example d and execute it
x <- 5L
x
# Complete the code for Example e and execute it
x <- 5
x
# Complete the code for Example e and execute it
x <- 5
x
# Example a.: execute this example
x <- 'A'
typeof(x)
# Complete the code for Example d and execute it
x <- 5L
typeof(x)
# Complete the code for Example e and execute it
x <- 5
typeof(x)
# Complete the code for Example f and execute it
x <- 1i
typeof(x)
# Get more information about the mean() command using ? operator
?mean()
# Convert the variable number_of_cats using as.integer()
as.integer(cat_lovers$number_of_cats)
# import the cat-lovers data from the csv file you downloaded from canvas
cat_lovers <- read_csv("cat-lovers.csv")
# Convert the variable number_of_cats using as.integer()
as.integer(cat_lovers$number_of_cats)
# Display the elements of the column number_of_cats
cat_lovers$number_of_cats
# Convert the variable number_of_cats using as.integer()
as.integer(cat_lovers$number_of_cats)
# Display the elements of the column number_of_cats after converting it using as.numeric()
as.numeric(cat_lovers$number_of_cats)
# Empty vector
x <- vector()
# Type of the empty vector
typeof(x)
# Method 1
x <- vector("character",length=5)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 1
x<-vector("logical",length=5)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 2
x <- character(5)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 3
x <- c('A','b','r','q')
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 3
x <- c(1,2,3,4,5)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 2
x <- character(5)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 1
x <- vector("integer",length=5)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 2
x <- integer(5)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 3
x <- c(1,2,3,4,5)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 4
x <- seq(from=1, to=5, by=1)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 5
x <- 1:5
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 4
x <- seq(from=1L, to=5L, by=1)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 4
x <- seq(from=1L, to=5L, by=1L)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 3
x <- c(1L,2L,3L,4L,5L)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 2
x <- integer(5)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Method 3
x <- c(1.324, 2.987, 3.498)
# Display the contents of x
print(x)
# Display the type of x
print(typeof(x))
# Add a character to the vector
x <- c(x,'a')
# Check the type of x
print(typeof(x))
# Create a vector
x <- c(TRUE)
# Check the type of x
typeof(x)
# Add a number to the vector
x <- c(x,2)
# Check the type of x
typeof(x)
# Add a logical value to the vector
x <- c(x,TRUE)
# Check the type of x
typeof(x)
# Create a vector
x <- c('a')
# Check the type of x
typeof(x)
# Add a logical value to the vector
x <- c(x,TRUE)
# Check the type of x
typeof(x)
# Add a number to the vector
x <- c(x,2)
# Check the type of x
typeof(x)
# Create a vector
x <- c(1L)
# Check the type of x
typeof(x)
# Add a number to the vector
x <- c(x,2)
# Check the type of x
typeof(x)
# Create a vector
x <- c(1L)
# Check the type of x
typeof(x)
# Convert the vector to type character
x <- as.character(x)
# Check the type of x
typeof(x)
# Access one element with index 3
x[3]
# Create a vector
x <- c(1,10,9,8,1,3,5)
# Access one element with index 3
x[3]
# Access elements with consecutive indices, 2 to 4: 2,3,4
x[2:4]
# Access elements with non-consecutive indices, 1,3,5
x[c(1,3,5)]
# Display the length of the vector
print(length(x))
# Display the type of the vector
print(typeof(x))
# Display the structure of the vector
print(str(x))
# Initialise a named list
my_pie = list(type="key lime", diameter=7, is.vegetarian=TRUE)
# display the list
my_pie
# Print the names of the list
names(my_pie)
# Retrieve the element named type
my_pie$type
# Install package
install.packages("openintro")
# Load the package
library(openintro)
# Load package
library(tidyverse)
# Selecting numeric variables
loans <- loans_full_schema %>% # <-- pipe operator
select(paid_total, term, interest_rate,
annual_income,paid_late_fees,debt_to_income)
# View the columns stacked one below another
glimpse(loans)
# Selecting categoric variables
loans <- loans_full_schema %>%
select(grade, state, homeownership, disbursement_method) # type the chosen columns as in the lecture slide
# View the columns stacked one below another
glimpse(loans)
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
data <- c(10, 15.5, "20", TRUE)
typeof(10)
# Enter code here
data <- c(10, 15.5, "20", TRUE)
typeof(data[1])
typeof(data[2])
typeof(data[3])
typeof(data[4])
# Enter code here
prices <- c(20.5, 15, and "25")
# Enter code here
prices <- c(20.5, 15, and "25")
# Enter code here
prices <- c(20.5, 15, and "25")
# Enter code here
prices <- c(20.5, 15, "25")
as.numeric(prices[3])
# Enter code here
num <- c(5, 10, 15)
cha <- c("apple", "banana", "cherry")
com <- c(num,cha)
typeof(com)
# Enter code here
numbers <- c(7, 12.5, "15.7")
as.numeric(numbers[3])
sum(numbers)
# Enter code here
numbers <- c(7, 12.5, "15.7")
numbers <- c(numbers[1:2],as.numeric(numbers[3])
sum(numbers)
# Enter code here
numbers <- c(7, 12.5, "15.7")
numbers <- c(numbers[1:2],as.numeric(numbers[3]))
sum(numbers)
# Enter code here
numbers <- c(7, 12.5, "15.7")
sum(as.numeric(numbers))
# Enter code here
numbers <- c(7, 12.5, "15.7")
sum(as.numeric(numbers))
sum(numbers)
# Enter code here
grades <- c(85, 90.5, "75.2")
mean(as.numeric(grades))
# Enter code here
nu <- c(10, 20, 30)
ch <- c("red", "green", "blue")
lo <- c(TRUE, FALSE, TRUE)
mixed_data <- list(nu,ch,lo)
mean(as.numeric(mixed_data))
# Enter code here
nu <- c(10, 20, 30)
ch <- c("red", "green", "blue")
lo <- c(TRUE, FALSE, TRUE)
mixed_data <- list(nu,ch,lo)
mean(mixed_data$nu)
# Enter code here
nu <- c(10, 20, 30)
ch <- c("red", "green", "blue")
lo <- c(TRUE, FALSE, TRUE)
mixed_data <- list(nu,ch,lo)
mean(mixed_data$nu)
# Enter code here
nu <- c(10, 20, 30)
ch <- c("red", "green", "blue")
lo <- c(TRUE, FALSE, TRUE)
mixed_data <- list(nu,ch,lo)
mixed_data
# Enter code here
nu <- c(10, 20, 30)
ch <- c("red", "green", "blue")
lo <- c(TRUE, FALSE, TRUE)
mixed_data <- list(nu,ch,lo)
mean(mixed_data$nu)
# Enter code here
nu <- c(10, 20, 30)
ch <- c("red", "green", "blue")
lo <- c(TRUE, FALSE, TRUE)
mixed_data <- list(nu,ch,lo)
mean(mixed_data$nu)
# Enter code here
nu <- c(10, 20, 30)
ch <- c("red", "green", "blue")
lo <- c(TRUE, FALSE, TRUE)
mixed_data <- list(nu,ch,lo)
mean(mixed_data$nu)
# Enter code here
nu <- c(10, 20, 30)
ch <- c("red", "green", "blue")
lo <- c(TRUE, FALSE, TRUE)
mixed_data <- list(nu,ch,lo)
mean(nu)
# Enter code here
nu <- c(10, 20, 30)
ch <- c("red", "green", "blue")
lo <- c(TRUE, FALSE, TRUE)
mixed_data <- list(nu,ch,lo)
mean(mixed_data$nu)
# Enter code here
mixed_data <- list(
nu = c(10, 20, 30)
ch = c("red", "green", "blue")
# Enter code here
list(
name <- c("Alice," "Bob," "Catherine"),
# Enter code here
list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
# Enter code here
mixed_data <- list(
nu = c(10, 20, 30),
ch = c("red", "green", "blue"),
lo = c(TRUE, FALSE, TRUE)
)
mean(mixed_data$nu)
student_info
# Enter code here
list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$names = "Bob")
# Enter code here
list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$names == "Bob")
# Enter code here
student_info <- list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$names == "Bob")
list$score(bob_index)
# Enter code here
student_info <- list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$names == "Bob")
student_info$score(bob_index)
# Enter code here
student_info <- list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$names == "Bob")
student_info$score[bob_index]
# Enter code here
student_info <- list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$names == "Bob")
print(student_info$score[bob_index])
# Enter code here
student_info <- list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$names == "Bob")
bob_score <- student_info$score[bob_index]
print(bob_score)
# Enter code here
student_info <- list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$names == "Bob")
print(student_info$score[bob_index])
# Enter code here
student_info <- list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$names == "Bob")
print(bob_index)
# Enter code here
student_info <- list(
name = c("Alice", "Bob", "Catherine"),
score = c(85, 92, 78),
pass = c(TRUE, TRUE, FALSE)
)
bob_index <- which(student_info$name == "Bob")
print(student_info$score[bob_index])
# Enter code here
num_v <- rnorm(12)
last <- num[length(num)]
print(last)
# Enter code here
words <- c("apple", "banana", "cherry", "apple")
print(which(words == "apple"))
# Enter code here
ages <- c(20, 19, 39, 44)
print(ages>30)
# Enter code here
ages <- c(20, 19, 39, 44)
print(ages[ages>30])
# Enter code here
sequence <- 1:20
thirds <- sequence[seq(3, length(sequence), by = 3)]
# Enter code here
sequence <- 1:20
thirds <- sequence[seq(3, length(sequence), by = 3)]
# Enter code here
sequence <- 1:20
thirds <- sequence[seq(3, length(sequence), by = 3)]
print(thirds)
# Enter code here
x <- c(1:10)
# Enter code here
x <- c(1:10)
print(x[4],x[8])
# Enter code here
x <- c(1:10)
print(x[5]:x[7])
# Enter code here
data <- c(10, NA, 15, 20)
print(is.na(data[2]))
# Enter code here
days <- c(77, 88, 99, 69, 112)
hot_days <- days>90
print(nrow(hot_days))
# Enter code here
days <- c(77, 88, 99, 69, 112)
hot_days <- days>90
print(sum(hot_days))
# Enter code here
fruits <- c("apple","orange","pear","mangosteen")
long_names <- nchar(fruits) > 6
print(long_names)
# Enter code here
fruits <- c("apple","orange","pear","mangosteen")
long_names <- nchar(fruits) > 6
print(fruit[long_names])
# Enter code here
fruits <- c("apple","orange","pear","mangosteen")
long_names <- nchar(fruits) > 6
print(fruits[long_names])
