knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
tidydata <- tribble(
~country, ~year, ~cases, ~population,
"Afghanistan", 1999, 745, 19987071,
"Afghanistan", 2000, 2666, 20595360,
"Brazil", 1999, 37737, 172006362,
"Brazil", 2000, 80488, 174504898,
"China", 1999, 212258, 1272915272,
"China", 2000, 213766, 1280428583)
tidydata
library(tidyverse)
tidydata <- tribble(
~country, ~year, ~cases, ~population,
"Afghanistan", 1999, 745, 19987071,
"Afghanistan", 2000, 2666, 20595360,
"Brazil", 1999, 37737, 172006362,
"Brazil", 2000, 80488, 174504898,
"China", 1999, 212258, 1272915272,
"China", 2000, 213766, 1280428583)
tidydata
nontidydata <- tribble(
~country,~year,~rate,
"Afghanistan", 1999, "745/19987071",
"Afghanistan", 2000, "2666/20595360",
"Brazil", 1999, "37737/172006362",
"Brazil", 2000, "80488/174504898",
"China", 1999, "212258/1272915272",
"China", 2000, "213766/1280428583")
nontidydata
tidieddata <- nontidydata %>%
separate(rate, into = c("cases","population"), sep = "/")
#call the old one for comparison too
nontidydata
tidieddata
newtidieddata <- tidieddata %>%
pivot_longer(
cols = cases:population,
names_to = "measurement",
values_to = "value"
)
newtidieddata
newtidieddata
newtidieddata %>%
pivot_wider(names_from="measurement", values_from="value")
df2 <- tribble(
~id, ~measurement, ~value,
"A", "bp1", 100,
"B", "bp1", 140,
"B", "bp2", 115,
"A", "bp2", 120,
"A", "bp3", 105
)
df2
#reshape
df %>%
pivot_wider(names_from = measurement, values_from = value)
df2 <- tribble(
~id, ~measurement, ~value,
"A", "bp1", 100,
"B", "bp1", 140,
"B", "bp2", 115,
"A", "bp2", 120,
"A", "bp3", 105
)
df2
#reshape
df2 %>%
pivot_wider(names_from = measurement, values_from = value)
billboard
knitr::opts_chunk$set(echo = TRUE)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank"
values_drop_na = TRUE
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
mutate(week = parse_number(week))
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
mutate(week = parse_number(week))
)
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
mutate("week" = parse_number("week"))
)
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
newbillboard %>%
mutate(week = parse_number(week))
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
#make it so only the number shows in the week column
newbillboard %>%
mutate(week = parse_number(week))
#plot
ggplot(newbillboard) +
aes(x=week,y=rank, colour=track) +
geom_point() +
geom_line(aes(group = track))+
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
#make it so only the number shows in the week column
newbillboard %>%
mutate(week = parse_number(week))
#plot
ggplot(newbillboard) +
aes(x=week,y=rank, colour=track) +
geom_point() +
geom_line(aes(group = track))
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
#make it so only the number shows in the week column
newbillboard %>%
mutate(week = parse_number(week))
#plot
ggplot(newbillboard) +
aes(x=week,y=rank, colour=artist) +
geom_point() +
geom_line(aes(group = artist))
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
#make it so only the number shows in the week column
newbillboard %>%
mutate(week = parse_number(week))
#plot
ggplot(newbillboard) +
aes(x=week,y=rank, colour=track) +
geom_point() +
geom_line(aes(group = track)) +
facet_wrap(~artist)
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
#make it so only the number shows in the week column
newbillboard %>%
mutate(week = parse_number(week))
#plot
ggplot(newbillboard) +
aes(x=week,y=rank, colour=track) +
geom_point() +
geom_line()
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
#make it so only the number shows in the week column
newbillboard %>%
mutate(week = parse_number(week))
#plot
ggplot(newbillboard) +
aes(x=week,y=rank) +
geom_point() +
geom_line()
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
#make it so only the number shows in the week column
newbillboard %>%
mutate(week = parse_number(week))
#plot
ggplot(newbillboard) +
aes(x=week,y=rank) +
geom_point() +
geom_line(aes(group = rank))
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
#make it so only the number shows in the week column
newbillboard %>%
mutate(week = parse_number(week))
#plot
ggplot(newbillboard) +
aes(x=week,y=rank) +
geom_point() +
geom_line(aes(group = week()))
library(tidyverse)
newbillboard <- billboard %>%
pivot_longer(
cols = starts_with("wk") ,
names_to = "week",
values_to = "rank",
values_drop_na = TRUE,
)
#make it so only the number shows in the week column
newbillboard %>%
mutate(week = parse_number(week))
#plot
ggplot(newbillboard) +
aes(x=week,y=rank) +
geom_point() +
geom_line(aes(group = week))
cms_patient_experience
newtidieddata %>%
pivot_wider(
names_from="measure_cd",
values_from="prf_rate",
#tell pivot_wider() which column/columns have values that uniquely identify each row
id_cols = starts_with("org")
)
cms_patient_experience %>%
pivot_wider(
names_from="measure_cd",
values_from="prf_rate",
#tell pivot_wider() which column/columns have values that uniquely identify each row
id_cols = starts_with("org")
)
cms_patient_experience %>%
pivot_wider(
names_from="measure_cd",
values_from="prf_rate",
#tell pivot_wider() which column/columns have values that uniquely identify each row
id_cols = starts_with("org")
)
